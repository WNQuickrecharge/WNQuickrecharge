apply plugin: 'com.android.application'

//获取生成的产品名
def getProductName() {
    return "clock"
}

//获取打包的时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('../debug.keystore')
            storePassword 'android'
        }
        release {
            keyAlias 'WNQuickrecharge'
            keyPassword '123456'
            storeFile file('../release.jks')
            storePassword '123456'
        }
    }

    defaultConfig {
        applicationId "com.optimumnano.quickcharge"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        manifestPlaceholders = [
                GETUI_APP_ID    : "EGwqPmPNSiAr6u8WadoaZ",
                GETUI_APP_KEY   : "j9tgnYHQnZ9RR9gpgY4PY4",
                GETUI_APP_SECRET: "ZSTzy2W71388bZP3HSTzM2"
        ]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            //移除无用资源
            shrinkResources true
            //            压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def newName = '';
            if (variant.buildType.name == 'release') {
//                println(variant.productFlavors[0].name)//多渠道
                def releaseApkName = getProductName() + "_v" + globalConfiguration["versionName"] + "_${releaseTime()}_" + "WNQuickrecharge" + '-release.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            } else if (variant.buildType.name.equals('debug')) {
                newName = oldFile.name.replace(".apk", "-v" + globalConfiguration["versionName"] + "_${releaseTime()}_" + "WNQuickrecharge" + "-debug.apk")
                output.outputFile = new File(oldFile.parent, newName)
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library')
    compile project(':materialanimatedswitch')
    compile 'org.xutils:xutils:3.3.4'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.alibaba:fastjson:1.2.20'
    compile 'cn.yipianfengye.android:zxing-library:2.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.luffykou:android-common-utils:1.1.3'
    //    compile 'com.android.support.constraint:constraint-layout:1.0.1'
    compile 'com.lzy.widget:imagepicker:0.5.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.netease.hearttouch:ht-refreshrecyclerview:1.2.0'
    testCompile 'junit:junit:4.12'
    compile 'com.github.jaychang0917:SimpleText:1.2.1'
    compile 'com.getui:sdk:2.10.2.0'
    compile 'com.belerweb:pinyin4j:2.5.0'
    compile project(path: ':SignalA')
    compile project(path: ':SignalA.LongPolling')
    compile 'org.lzh.nonview.updateplugin:UpdatePlugin:2.4'
}
